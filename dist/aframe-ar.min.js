!function(e){function t(a){if(i[a])return i[a].exports;var r=i[a]={exports:{},id:a,loaded:!1};return e[a].call(r.exports,r,r.exports,t),r.loaded=!0,r.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t,i){i(4),i(3),i(2),i(1)},function(e,t){AFRAME.registerComponent("ar-raycaster",{dependencies:["raycaster"],schema:{x:{default:.5},y:{default:.5},el:{type:"selector"}},init:function(){this.raycaster=this.el.components.raycaster.raycaster,this.raycasterIntersectObjects=this.raycaster.intersectObjects.bind(this.raycaster),this.raycaster.intersectObjects=this.intersectObjects.bind(this)},update:function(e){this.data.el||this.el.sceneEl.object3D.el||(this.el.sceneEl.object3D.el=this.el.sceneEl)},intersectObjects:function(e,t){return this.raycasterIntersectObjects(e,t).concat(this.hitAR())},hitAR:function(){var e=new THREE.Matrix4,t=new THREE.Vector3,i=new THREE.Quaternion,a=new THREE.Vector3;return function(){var r=this.el.sceneEl.components["three-ar"];if(!r||!r.arDisplay||!r.arDisplay.hitTest)return[];var n=r.arDisplay.hitTest(this.data.x,this.data.y);return!n||n.length<=0?[]:(e.fromArray(n[0].modelMatrix),e.decompose(t,i,a),[{distance:t.distanceTo(this.el.object3D.position),point:t,object:this.data.el&&this.data.el.object3D||this.el.sceneEl.object3D}])}}()})},function(e,t){AFRAME.registerComponent("ar",{dependencies:["three-ar-planes"],init:function(){this.el.sceneEl.setAttribute("vr-mode-ui",{enabled:!1})}})},function(e,t){AFRAME.registerComponent("three-ar-planes",{dependencies:["three-ar"],init:function(){this.planes={}},tick:function(e,t){var i=0,a=new THREE.Vector3(1,1,1),r=new THREE.Vector3,n=new THREE.Matrix4,s=new THREE.Vector3,o=new THREE.Vector3,c=new THREE.Quaternion,l=new THREE.Euler(0,0,0,"YXZ");return function(e,t){var h=this.el.components["three-ar"];if(h&&h.arDisplay){var p,E=h.arDisplay,u=E.getPlanes?E.getPlanes():E.anchors_,m=[],f=[],d=[],D={};for(p=0;u&&p<u.length;p++){var y=u[p],R={};R.identifier=(void 0!==y.identifier?y.identifier:y.id).toString(),y.timestamp&&(R.timestamp=y.timestamp),y.transform?(n.fromArray(y.transform),n.decompose(s,c,a),R.position=[s.x,s.y,s.z],R.orientation=[c._x,c._y,c._z,c._w],R.extent=y.extent):void 0!==R.timestamp?(R.position=y.position,R.orientation=y.orientation,R.extent=y.extent,y.polygon?R.vertices=y.polygon:y.vertices&&(R.vertices=y.vertices)):(R.position=[y.position[0],y.position[1],y.position[2]],R.orientation=[y.orientation[0],y.orientation[1],y.orientation[2],y.orientation[3]],R.extent=[y.extent[0],y.extent[1]],y.polygon?(R.vertices=[],y.polygon.forEach(function(e){R.vertices.push(e)})):y.vertices&&(R.vertices=y.vertices));var v=R.identifier;D[v]=!0,this.planes[v]?this.planes[v].timestamp?R.timestamp!==this.planes[v].timestamp&&f.push(R):AFRAME.utils.deepEqual(R,this.planes[v])||f.push(R):(this.planes[v]=void 0!==R.timestamp?R:JSON.parse(JSON.stringify(R)),m.push(R))}var A=this;Object.keys(A.planes).forEach(function(e){D[e]||(d.push(A.planes[e]),delete A.planes[e])}),d.forEach(function(e){A.el.emit("removeplane",{id:e.identifier})}),f.forEach(function(e){s.fromArray(e.position),c.fromArray(e.orientation),l.setFromQuaternion(c),o.set(l.x*THREE.Math.RAD2DEG,l.y*THREE.Math.RAD2DEG,l.z*THREE.Math.RAD2DEG),r.set(e.extent[0],0,e.extent[1]),A.el.emit("updateplane",{id:e.identifier,alignment:i,position:s,rotation:o,extent:r,vertices:e.vertices,scale:a})}),m.forEach(function(e){s.fromArray(e.position),c.fromArray(e.orientation),l.setFromQuaternion(c),o.set(l.x*THREE.Math.RAD2DEG,l.y*THREE.Math.RAD2DEG,l.z*THREE.Math.RAD2DEG),r.set(e.extent[0],0,e.extent[1]),A.el.emit("createplane",{id:e.identifier,alignment:i,position:s,rotation:o,extent:r,vertices:e.vertices||e.polygon,scale:a})})}}}()})},function(e,t){AFRAME.registerComponent("three-ar",{schema:{takeOverCamera:{default:!0}},init:function(){this.el.sceneEl.hasLoaded?this.onceSceneLoaded():this.el.sceneEl.addEventListener("loaded",this.onceSceneLoaded.bind(this))},tick:function(e,t){if(this.arDisplay&&this.arDisplay.getFrameData&&(this.arView&&this.arView.render(),this.arCamera)){var i=this.arCamera;this.frameData||(this.frameData=new VRFrameData),this.arDisplay.getFrameData(this.frameData);var a=this.frameData.pose.position;i.el.setAttribute("position",{x:a[0],y:a[1],z:a[2]}),this.poseEuler||(this.poseEuler=new THREE.Euler(0,0,0,"YXZ")),this.poseQuaternion||(this.poseQuaternion=new THREE.Quaternion);var r=this.frameData.pose.orientation;this.poseQuaternion.set(r[0],r[1],r[2],r[3]),this.poseEuler.setFromQuaternion(this.poseQuaternion),i.el.setAttribute("rotation",{x:THREE.Math.RAD2DEG*this.poseEuler.x,y:THREE.Math.RAD2DEG*this.poseEuler.y,z:THREE.Math.RAD2DEG*this.poseEuler.z}),i.projectionMatrix.fromArray(this.frameData.leftProjectionMatrix)}},takeOverCamera:function(e){this.arCamera=e,e.isARPerspectiveCamera=!0,e.vrDisplay=this.arDisplay,e.el.setAttribute("look-controls",{enabled:!1})},onceSceneLoaded:function(){var e=this;THREE.ARUtils.getARDisplay().then(function(t){if(e.arDisplay=t,t){var i=e.el.sceneEl;e.data.takeOverCamera&&setTimeout(function(){e.takeOverCamera(i.camera)}),i.renderer.alpha=!0,i.renderer.autoClearColor=THREE.ARUtils.isARKit(t),i.renderer.autoClearDepth=!0,e.arView=new THREE.ARView(t,i.renderer)}})},getProjectionMatrix:function(){return this.arDisplay&&this.arDisplay.getFrameData?(this.frameData||(this.frameData=new VRFrameData),this.arDisplay.getFrameData(this.frameData),this.frameData.leftProjectionMatrix):null}})}]);