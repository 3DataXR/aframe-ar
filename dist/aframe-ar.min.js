!function(e){function t(r){if(a[r])return a[r].exports;var i=a[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var a={};return t.m=e,t.c=a,t.p="",t(0)}([function(e,t,a){a(2),a(1),a(3)},function(e,t){AFRAME.registerComponent("three-ar",{schema:{takeOverCamera:{default:!0}},init:function(){this.el.sceneEl.hasLoaded?this.onceSceneLoaded():this.el.sceneEl.addEventListener("loaded",this.onceSceneLoaded.bind(this))},tick:function(e,t){if(this.arDisplay&&this.arDisplay.getFrameData&&(this.arView&&this.arView.render(),this.arCamera)){var a=this.arCamera;this.frameData||(this.frameData=new VRFrameData),this.arDisplay.getFrameData(this.frameData);var r=this.frameData.pose.position;a.el.setAttribute("position",{x:r[0],y:r[1],z:r[2]}),this.poseEuler||(this.poseEuler=new THREE.Euler(0,0,0,"YXZ")),this.poseQuaternion||(this.poseQuaternion=new THREE.Quaternion);var i=this.frameData.pose.orientation;this.poseQuaternion.set(i[0],i[1],i[2],i[3]),this.poseEuler.setFromQuaternion(this.poseQuaternion),a.el.setAttribute("rotation",{x:THREE.Math.RAD2DEG*this.poseEuler.x,y:THREE.Math.RAD2DEG*this.poseEuler.y,z:THREE.Math.RAD2DEG*this.poseEuler.z}),a.projectionMatrix.fromArray(this.frameData.leftProjectionMatrix)}},takeOverCamera:function(e){this.arCamera=e,e.isARPerspectiveCamera=!0,e.vrDisplay=this.arDisplay,e.el.setAttribute("look-controls",{enabled:!1})},onceSceneLoaded:function(){var e=this;THREE.ARUtils.getARDisplay().then(function(t){if(e.arDisplay=t,t){var a=e.el.sceneEl;e.data.takeOverCamera&&setTimeout(function(){e.takeOverCamera(a.camera)}),a.renderer.alpha=!0,a.renderer.autoClearColor=THREE.ARUtils.isARKit(t),a.renderer.autoClearDepth=!0,e.arView=new THREE.ARView(t,a.renderer)}})},getProjectionMatrix:function(){return this.arDisplay&&this.arDisplay.getFrameData?(this.frameData||(this.frameData=new VRFrameData),this.arDisplay.getFrameData(this.frameData),this.frameData.leftProjectionMatrix):null}}),AFRAME.registerComponent("ar",{dependencies:["three-ar"],init:function(){this.el.sceneEl.setAttribute("vr-mode-ui",{enabled:!1})}})},function(e,t){AFRAME.registerComponent("three-ar",{schema:{takeOverCamera:{default:!0}},init:function(){this.el.sceneEl.hasLoaded?this.onceSceneLoaded():this.el.sceneEl.addEventListener("loaded",this.onceSceneLoaded.bind(this))},tick:function(e,t){if(this.arDisplay&&this.arDisplay.getFrameData&&(this.arView&&this.arView.render(),this.arCamera)){var a=this.arCamera;this.frameData||(this.frameData=new VRFrameData),this.arDisplay.getFrameData(this.frameData);var r=this.frameData.pose.position;a.el.setAttribute("position",{x:r[0],y:r[1],z:r[2]}),this.poseEuler||(this.poseEuler=new THREE.Euler(0,0,0,"YXZ")),this.poseQuaternion||(this.poseQuaternion=new THREE.Quaternion);var i=this.frameData.pose.orientation;this.poseQuaternion.set(i[0],i[1],i[2],i[3]),this.poseEuler.setFromQuaternion(this.poseQuaternion),a.el.setAttribute("rotation",{x:THREE.Math.RAD2DEG*this.poseEuler.x,y:THREE.Math.RAD2DEG*this.poseEuler.y,z:THREE.Math.RAD2DEG*this.poseEuler.z}),a.projectionMatrix.fromArray(this.frameData.leftProjectionMatrix)}},takeOverCamera:function(e){this.arCamera=e,e.isARPerspectiveCamera=!0,e.vrDisplay=this.arDisplay,e.el.setAttribute("look-controls",{enabled:!1})},onceSceneLoaded:function(){var e=this;THREE.ARUtils.getARDisplay().then(function(t){if(e.arDisplay=t,t){var a=e.el.sceneEl;e.data.takeOverCamera&&setTimeout(function(){e.takeOverCamera(a.camera)}),a.renderer.alpha=!0,a.renderer.autoClearColor=THREE.ARUtils.isARKit(t),a.renderer.autoClearDepth=!0,e.arView=new THREE.ARView(t,a.renderer)}})},getProjectionMatrix:function(){return this.arDisplay&&this.arDisplay.getFrameData?(this.frameData||(this.frameData=new VRFrameData),this.arDisplay.getFrameData(this.frameData),this.frameData.leftProjectionMatrix):null}})},function(e,t){AFRAME.registerComponent("ar-raycaster",{dependencies:["raycaster"],schema:{x:{default:.5},y:{default:.5},el:{type:"selector"}},init:function(){this.raycaster=this.el.components.raycaster.raycaster,this.raycasterIntersectObjects=this.raycaster.intersectObjects.bind(this.raycaster),this.raycaster.intersectObjects=this.intersectObjects.bind(this)},update:function(e){this.data.el||this.el.sceneEl.object3D.el||(this.el.sceneEl.object3D.el=this.el.sceneEl)},intersectObjects:function(e,t){return this.raycasterIntersectObjects(e,t).concat(this.hitAR())},hitAR:function(){var e=new THREE.Matrix4,t=new THREE.Vector3,a=new THREE.Quaternion,r=new THREE.Vector3;return function(){var i=this.el.sceneEl.components["three-ar"];if(!i||!i.arDisplay||!i.arDisplay.hitTest)return[];var s=i.arDisplay.hitTest(this.data.x,this.data.y);return!s||s.length<=0?[]:(e.fromArray(s[0].modelMatrix),e.decompose(t,a,r),[{distance:t.distanceTo(this.el.object3D.position),point:t,object:this.data.el&&this.data.el.object3D||this.el.sceneEl.object3D}])}}()})}]);